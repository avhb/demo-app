name: Docker Image CI
on: [push]
jobs:
  Build-Docker-Image:
    runs-on: ubuntu-20.04
    outputs:
      docker-image-tag: ${{ steps.docker-tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v3
      - name: Get info
        run: |
          echo "job triggered by - ${{ github.event_name }}"
          echo "job running on ${{ runner.os }} server hosted by GitHub!"
          echo "branch name - ${{ github.ref }}, repo - ${{ github.repository }}"
          echo "job status - ${{ job.status }}."
          echo "pwd: $(pwd)"
          ls ${{ github.workspace }}
      
      # - name: Cleanup docker environment (removing all containers and images)
      #   run: | 
      #     if [[ $(docker ps -aq | wc -l) -ne 0 ]]; then docker stop $(docker ps -aq) && docker rm $(docker ps -aq); fi
      #     if [[ $(docker images -q | wc -l) -ne 0 ]]; then docker image rm --force $(docker images -q); fi


      - name: Set docker image name
        id: docker-name
        run: echo "::set-output name=name::demo-app"
      - name: Create timestamped docker tag
        id: docker-tag
        run: echo "::set-output name=tag::avhb/${{ steps.docker-name.outputs.name }}:$(date '+%Y%m%dT%H%M%S')"
      
      - name: Build the Docker image
        run: |
          pushd app
          docker build . --file Dockerfile --tag ${{ steps.docker-tag.outputs.tag }}
          popd

      - name: INFO - docker images
        run: docker images
      
      - name: Start the image
        run: docker run -d -p 5000:5000 ${{ steps.docker-tag.outputs.tag }}
      
      - name: Check with curl that image is running
        run: for i in 1 2 3 4 5 6 7 8 9 10; do curl http://127.0.0.1:5000/ && break || sleep 1; done
      - run: echo "::set-output name=action_fruit::strawberry"

      - name: Log in to Docker Hub
        env:
          DOCKERHUB_USERNAME: avhb
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD

      #- name: Push into Docker Hub
      #  run: docker push randilt/flask-github-actions-app

  Publish-Docker-Image:
    needs: Build-Docker-Image
    runs-on: ubuntu-20.04
    steps:
      - name: INFO - docker images
        run: docker images
      - run: echo ${{ needs.Build-Docker-Image.outputs.docker-image-tag }}
